"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const middlewares_1 = require("../middleware/middlewares");
const middlewares_2 = require("../middleware/middlewares");
const createdUser_1 = require("../controlleer/user/createdUser");
const schema_user_1 = require("../schema/schema.user");
const loginUser_controler_1 = require("../controlleer/user/loginUser.controler");
const deleteUser_controller_1 = require("../controlleer/user/deleteUser.controller");
const getAllusers_1 = require("../controlleer/user/getAllusers");
const sendReseteEmailPassword_1 = require("../controlleer/user/sendReseteEmailPassword");
const check_activate_middle_1 = require("../middleware/check.activate.middle");
const checkAdmin_1 = require("../middleware/checkAdmin");
const updateActivate_controller_1 = require("../controlleer/admin/updateActivate.controller");
const userRouter = (0, express_1.Router)();
userRouter.post("/register", middlewares_2.checkEmailMiddle, (0, middlewares_1.validateDataMiddleware)(schema_user_1.createdUserSchema), createdUser_1.createdUserController);
userRouter.post("/login", (0, middlewares_1.validateDataMiddleware)(schema_user_1.loginUserSchema), check_activate_middle_1.checkActivation, loginUser_controler_1.loginUserController);
userRouter.post("/users/reset-password", sendReseteEmailPassword_1.sendEmailResetPasswordController);
userRouter.get("/list-users", middlewares_1.veriFyTokenIsValid, checkAdmin_1.checkAdmin, getAllusers_1.getAllUserController);
userRouter.delete("/users/delete", middlewares_1.veriFyTokenIsValid, checkAdmin_1.checkAdmin, deleteUser_controller_1.deleteUserController);
userRouter.patch("/reset-password/:token", sendReseteEmailPassword_1.resetPasswordController);
userRouter.put('/:userId/activate', middlewares_1.veriFyTokenIsValid, checkAdmin_1.checkAdmin, updateActivate_controller_1.activateUser);
exports.default = userRouter;

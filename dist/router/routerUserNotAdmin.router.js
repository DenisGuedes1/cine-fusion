"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const sendReseteEmailPassword_1 = require("../controlleer/user/sendReseteEmailPassword");
const validatedBody_middleware_1 = require("../middleware/validatedBody.middleware");
const schema_user_1 = require("../schema/schema.user");
const loginUser_controler_1 = require("../controlleer/user/loginUser.controler");
const checkEmail_middleware_1 = require("../middleware/checkEmail.middleware");
const createdUser_1 = require("../controlleer/user/createdUser");
const verifyTokenIsvalid_middleware_1 = require("../middleware/verifyTokenIsvalid.middleware");
const deleteUser_controller_1 = require("../controlleer/user/deleteUser.controller");
const updateUser_controller_1 = require("../controlleer/user/updateUser.controller");
const getUserForId_controller_1 = require("../controlleer/user/getUserForId.controller");
const addWatchToLater_controller_1 = require("../controlleer/user/addWatchToLater.controller");
const verifyIdUser_1 = require("../middleware/verifyIdUser");
const NotAdminRouter = (0, express_1.Router)();
NotAdminRouter.post("/reset-password", sendReseteEmailPassword_1.sendEmailResetPasswordController);
NotAdminRouter.post("/login", (0, validatedBody_middleware_1.validateDataMiddleware)(schema_user_1.loginUserSchema), loginUser_controler_1.loginUserController);
NotAdminRouter.post("/register", checkEmail_middleware_1.checkEmailMiddle, (0, validatedBody_middleware_1.validateDataMiddleware)(schema_user_1.createdUserSchema), createdUser_1.createdUserController);
NotAdminRouter.get("/user", verifyTokenIsvalid_middleware_1.veriFyTokenIsValid, getUserForId_controller_1.getuserByIdController);
NotAdminRouter.delete("/users/delete", verifyTokenIsvalid_middleware_1.veriFyTokenIsValid, verifyIdUser_1.verifyUserId, deleteUser_controller_1.deleteUserController);
NotAdminRouter.patch("/update-user", verifyTokenIsvalid_middleware_1.veriFyTokenIsValid, verifyIdUser_1.verifyUserId, updateUser_controller_1.updatedUserController);
NotAdminRouter.patch("/reset-password/:token", sendReseteEmailPassword_1.resetPasswordController);
NotAdminRouter.post('/:userId/watch-later', verifyTokenIsvalid_middleware_1.veriFyTokenIsValid, addWatchToLater_controller_1.addToWatchLater);
NotAdminRouter.get('/:userId/watch-later', verifyTokenIsvalid_middleware_1.veriFyTokenIsValid, verifyIdUser_1.verifyUserId, addWatchToLater_controller_1.getWatchLater);
exports.default = NotAdminRouter;
